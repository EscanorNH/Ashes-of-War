[core]
copyFrom: ROOT:Menu\Object\Object outpost\capPoint.copyFrom, ROOT:Menu\Object\Object outpost\capProgress.copyFrom
onNewMapSpawn: emptyOrOccupiedResourcePools_asNeutral
@global EZCP_capMax: 5
@global EZCP_capTimeMax: 20
@global EZCP_capTimeMin: 5
autoTriggerCooldownTime: 59
autoTriggerCheckRate:every8Frames
@global EZCP_capTag: #capper
@global EZCP_capRange: 100
@global EZCP_decalWidth: 20
@global EZCP_decalHeight: 3
@global EZCP_decalBorder: 1.5
@global EZCP_decalX: 0
@global EZCP_decalY: 20
@global EZCP_decalFrameWidth: 16
@global EZCP_decalFrameHeight: 8
@global EZCP_decalSize: 20
@global EZCP_decalFrameOffset: 31
showInEditor: false
name: FastDeployPool
class: CustomUnitMetadata
displayText: Resource point
displayText_ru: Точка снабжения
displayDescription: -Gains Influence 
displayDescription_ru: -Добывает Влияние
#isUnselectable: true
techLevel: 1
price:0
radius: 20
tags:point,building
mass: 0
fogOfWarSightRange: 5
buildSpeed: 10s
maxHp: 500
armour:9999
disableDeathOnZeroHp:true
disableAllUnitCollisions: true
isBio: false
softCollisionOnAll: 0
selfRegenRate: 1
generation_resources: Food=1
generation_delay:90
generation_active:if not self.globalTeamTags(includes='Necron')
#canOnlyBeAttackedByUnitsWithTags: cancapture
canNotBeDirectlyAttacked: true
isBuilding: true
canNotBeDamaged:true
isUnrepairableUnit: true
placeOnlyOnResPool: true
overrideAndReplace: extractorT2, extractor, extractorT1


transportUnitsBlockOtherTransports:false
transportUnitsBlockAirAndWaterUnits:true
maxTransportingUnits: 10
transportUnitsKillOnDeath: false



[hiddenAction_capBotCapture_1]
autoTrigger: if memory.EZCP_capRate == 1
temporarilyAddTags: pointCaptured
temporarilyRemoveTags: pointCapture

[hiddenAction_capBotCapture_2]
autoTrigger: if memory.EZCP_capRate > 0 and memory.EZCP_capRate < 1 or memory.EZCP_capRate == 0
temporarilyAddTags: pointCapture
temporarilyRemoveTags: pointCaptured

[hiddenAction_deds2]
autoTrigger:  if numberOfUnitsInAllTeams(withTag='standard', greaterThan=0)
deleteSelf: true

[graphics]
total_frames: 1
image: FastDepoyPool.png
image_back: NONE
image_wreak: NONE
image_turret: NONE
teamColorsOnTurret: true
showTransportBar:false
imageScale: 1
image_offsetY:0

[arm_1]
x: 7
y: 81.5
image_end: FastDepoyL2.png
image_end_teamColors: true
drawOverBody: true

[arm_2]
x: -7
y: 81.5
image_end: FastDepoyL2.png
image_end_teamColors: true
drawOverBody: true

[arm_3]
x: 7
y: 66.5
image_end: FastDepoyL.png
image_end_teamColors: true
drawOverBody: true

[arm_4]
x: -7
y: 66.5
image_end: FastDepoyL.png
image_end_teamColors: true
drawOverBody: true



[action_dropPod]
text: Droppod (CP:2)
text_ru:Дроппод (CP:2)
description: Planting Infantry on point
description_ru: Высаживает пехоту в точке
iconImage: FastDepoyL2.png
isLocked: if self.transportingCount(empty=true)
isLockedMessage: Needs infantry loaded in.

buildSpeed: 20s

price: Food=2
addActionCooldownTime:20s
fireTurretXAtGround: drop
fireTurretXAtGround_onlyOverPassableTileOf: LAND
pos: 0
allowMultipleInQueue: true


[attack]
canAttack: false
canAttackFlyingUnits: false
canAttackLandUnits: false 
canAttackUnderwaterUnits: false
turretRotateWithBody: false
maxAttackRange: ${EZCP_capRange}
showRangeUIGuide: true


[turret_drop]
x: 0
y: 0
invisible: true
canShoot: false
projectile: drop1

[projectile_drop1]
life: 10000
areaDamage: 0
speed: 20
spawnProjectilesOnExplode:drop(offsetHeight=600)
explodeEffect: NONE
invisible:true

[projectile_drop]
life: 600
areaDamage: 0
speed: 6
targetGround: true
explodeEffect: CUSTOM:val*1
largeHitEffect: true
unloadUpToXUnitsFromSource:5
image: FastDepoyL2.png




[effect_val]
image: FastDepoyL2.png
imageShadow: FastDepoyL2.png
life: 200
fadeOut: false
#fadeInTime:20
drawUnderUnits: false
hOffset: 1010
dirOffset: 0
yOffsetRelative: -1510
#hSpeed: -0.7
ySpeedRelative: 10
physics: true
shadow:true
attachedToUnit: true
atmospheric: true
scaleFrom: 1
scaleTo: 1



[movement]
movementType: LAND
moveSpeed: 0
moveAccelerationSpeed: 0.01
moveDecelerationSpeed: 0.01

maxTurnSpeed: 0
turnAcceleration: 0.1

[template_EZCP_decal]
order: 2
layer: beforeUI
imageScaleX: ${EZCP_decalWidth}*memory.EZCP_capRate
imageScaleY: ${EZCP_decalHeight}
xOffsetAbsolute: ${EZCP_decalX-EZCP_decalWidth/2}+memory.EZCP_capRate*${EZCP_decalWidth/2}
yOffsetAbsolute: ${EZCP_decalY}
image: SHARED:white_pixel.png
alwaysStartDirAtZero: true
color: ${color}
isVisible: if (self.teamId==-1 and memory.EZCP_contestant == ${team}) or (self.teamId == ${team})

[decal_EZCP_amount]
order: 3
isVisible: if (self.numberOfUnitsInAllTeams(withTag="${EZCP_capTag}",withinRange=${EZCP_capRange},greaterThan=0) )
layer: beforeUI
image: ROOT:Menu\Object\Object outpost\progress.png
frame_width: ${EZCP_decalFrameWidth}
frame_height: ${EZCP_decalFrameHeight}
imageScale: ${0.75*(EZCP_decalHeight/3)}
xOffsetAbsolute: ${EZCP_decalX+EZCP_decalWidth/2+EZCP_decalSize/2}
yOffsetAbsolute: ${EZCP_decalY}
frame: ${EZCP_decalFrameOffset}+min(max(select(memory.EZCP_contestant >= 0,min(max(memory.EZCP_markers[memory.EZCP_contestant].numberOfUnitsInAllyTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})+memory.EZCP_markers[memory.EZCP_contestant].numberOfUnitsInTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})-memory.EZCP_markers[memory.EZCP_contestant].numberOfUnitsInEnemyTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange}),-${EZCP_capMax}),${EZCP_capMax}), 0),-${EZCP_capMax}),${EZCP_capMax})

[decal_EZCP_background]
order: 0
layer: beforeUI
imageScaleX: ${EZCP_decalWidth+EZCP_decalBorder*2}
imageScaleY: ${EZCP_decalHeight+EZCP_decalBorder*2}
xOffsetAbsolute: ${EZCP_decalX}
yOffsetAbsolute: ${EZCP_decalY}
image: ROOT:Menu\Object\Object outpost\blackPixel.png

[decal_EZCP_background_2]
order: 1
layer: beforeUI
imageScaleX: ${EZCP_decalWidth}
imageScaleY: ${EZCP_decalHeight}
xOffsetAbsolute: ${EZCP_decalX}
yOffsetAbsolute: ${EZCP_decalY}
image: ROOT:Menu\Object\Object outpost\darkGrey.png

[decal_EZCP_team_neutral]
@copyFromSection: template_EZCP_decal
@define color: #AAAAAA
@define team: -2

[decal_EZCP_team0]
@copyFromSection: template_EZCP_decal
@define color: #00ff00
@define team: 0

[decal_EZCP_team1]
@copyFromSection: template_EZCP_decal
@define color: #d02013
@define team: 1

[decal_EZCP_team2]
@copyFromSection: template_EZCP_decal
@define color: #0463f3
@define team: 2

[decal_EZCP_team3]
@copyFromSection: template_EZCP_decal
@define color: #ffff40
@define team: 3

[decal_EZCP_team4]
@copyFromSection: template_EZCP_decal
@define color: #00ffff
@define team: 4

[decal_EZCP_team5]
@copyFromSection: template_EZCP_decal
@define color: #d0f8f7
@define team: 5

[decal_EZCP_team6]
@copyFromSection: template_EZCP_decal
@define color: #000000
@define team: 6

[decal_EZCP_team7]
@copyFromSection: template_EZCP_decal
@define color: #ff00ea
@define team: 7

[decal_EZCP_team8]
@copyFromSection: template_EZCP_decal
@define color: #ff7f18
@define team: 8

[decal_EZCP_team9]
@copyFromSection: template_EZCP_decal
@define color: #9368c4
@define team: 9

[core]
@memory EZCP_units: float[]
@memory EZCP_capRate: float
@memory EZCP_contestant: float
@memory EZCP_markers: unit[]
@memory EZCP_temp: float[]
@memory EZCP_capRatePerUnit: float
@memory EZCP_capRateBase: float

createNeutral: true
stayNeutral: true
# There to ensure it is created neutral, and stays neutral.

[hiddenAction_EZCP_createEZCP_markers]
autoTriggerOnEvent: created
setUnitMemory: """
EZCP_markers[0] = createMarker(x=self.x,y=self.y,teamId=0),
EZCP_markers[1] = createMarker(x=self.x,y=self.y,teamId=1),
EZCP_markers[2] = createMarker(x=self.x,y=self.y,teamId=2),
EZCP_markers[3] = createMarker(x=self.x,y=self.y,teamId=3),
EZCP_markers[4] = createMarker(x=self.x,y=self.y,teamId=4),
EZCP_markers[5] = createMarker(x=self.x,y=self.y,teamId=5),
EZCP_markers[6] = createMarker(x=self.x,y=self.y,teamId=6),
EZCP_markers[7] = createMarker(x=self.x,y=self.y,teamId=7),
EZCP_markers[8] = createMarker(x=self.x,y=self.y,teamId=8),
EZCP_markers[9] = createMarker(x=self.x,y=self.y,teamId=9),
EZCP_contestant = -2,
EZCP_capRateBase = ${1/EZCP_capTimeMax},
EZCP_capRatePerUnit = ${1/(EZCP_capTimeMax-EZCP_capTimeMin)/(EZCP_capMax-1)},
EZCP_capRate=0
"""
switchToTeam: -2

[hiddenAction_EZCP_checkCaptureWhileOwned]
autoTrigger: true
requireConditional: if (self.teamId >= 0 and self.numberOfUnitsInAllTeams(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange}, greaterThan=0))
setUnitMemory: """
EZCP_temp[0]=min(max(memory.EZCP_markers[memory.EZCP_contestant].numberOfUnitsInAllyTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})+memory.EZCP_markers[memory.EZCP_contestant].numberOfUnitsInTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})-memory.EZCP_markers[memory.EZCP_contestant].numberOfUnitsInEnemyTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange}),-${EZCP_capMax}),${EZCP_capMax}),
EZCP_temp[1]=select(memory.EZCP_temp[0] > 0, select(memory.EZCP_temp[0] == 1, memory.EZCP_capRateBase, memory.EZCP_capRateBase+(memory.EZCP_temp[0]-1)*memory.EZCP_capRatePerUnit),select(memory.EZCP_temp[0] < 0, select(memory.EZCP_temp[0] == -1, -memory.EZCP_capRateBase, (-memory.EZCP_capRateBase)+((memory.EZCP_temp[0]+1)*memory.EZCP_capRatePerUnit)), 0)),
EZCP_capRate=min(1,memory.EZCP_capRate+memory.EZCP_temp[1])
"""
alsoTriggerAction: EZCP_neutralize

[hiddenAction_EZCP_checkCaptureWhileNeutral]
autoTrigger: true
requireConditional: if (self.teamId <= -1 and self.numberOfUnitsInAllTeams(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange}, greaterThan=0))
alsoTriggerAction: EZCP_checkCaptureWhileNeutral_EZCP_contestantA, EZCP_checkCaptureWhileNeutral_NoEZCP_contestantA

[hiddenAction_EZCP_checkCaptureWhileNeutral_NoEZCP_contestantA]
requireConditional: if (memory.EZCP_contestant == -2)
setUnitMemory: """
EZCP_units[0] = select(memory.EZCP_markers[0].self.teamWipedOut(), 0, memory.EZCP_markers[0].numberOfUnitsInTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})+memory.EZCP_markers[0].numberOfUnitsInAllyTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})*0.25 ),
EZCP_units[1] = select(memory.EZCP_markers[1].self.teamWipedOut(), 0, memory.EZCP_markers[1].numberOfUnitsInTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})+memory.EZCP_markers[1].numberOfUnitsInAllyTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})*0.25 ),
EZCP_units[2] = select(memory.EZCP_markers[2].self.teamWipedOut(), 0, memory.EZCP_markers[2].numberOfUnitsInTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})+memory.EZCP_markers[2].numberOfUnitsInAllyTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})*0.25 ),
EZCP_units[3] = select(memory.EZCP_markers[3].self.teamWipedOut(), 0, memory.EZCP_markers[3].numberOfUnitsInTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})+memory.EZCP_markers[3].numberOfUnitsInAllyTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})*0.25 ),
EZCP_units[4] = select(memory.EZCP_markers[4].self.teamWipedOut(), 0, memory.EZCP_markers[4].numberOfUnitsInTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})+memory.EZCP_markers[4].numberOfUnitsInAllyTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})*0.25 ),
EZCP_units[5] = select(memory.EZCP_markers[5].self.teamWipedOut(), 0, memory.EZCP_markers[5].numberOfUnitsInTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})+memory.EZCP_markers[5].numberOfUnitsInAllyTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})*0.25 ),
EZCP_units[6] = select(memory.EZCP_markers[6].self.teamWipedOut(), 0, memory.EZCP_markers[6].numberOfUnitsInTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})+memory.EZCP_markers[6].numberOfUnitsInAllyTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})*0.25 ),
EZCP_units[7] = select(memory.EZCP_markers[7].self.teamWipedOut(), 0, memory.EZCP_markers[7].numberOfUnitsInTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})+memory.EZCP_markers[7].numberOfUnitsInAllyTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})*0.25 ),
EZCP_units[8] = select(memory.EZCP_markers[8].self.teamWipedOut(), 0, memory.EZCP_markers[8].numberOfUnitsInTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})+memory.EZCP_markers[8].numberOfUnitsInAllyTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})*0.25 ),
EZCP_units[9] = select(memory.EZCP_markers[9].self.teamWipedOut(), 0, memory.EZCP_markers[9].numberOfUnitsInTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})+memory.EZCP_markers[9].numberOfUnitsInAllyTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})*0.25 ),
EZCP_contestant = select(memory.EZCP_units[0] > 0, 0, -2),
EZCP_contestant = select(memory.EZCP_units[1] > 0, select(memory.EZCP_contestant >= 0, select(memory.EZCP_units[1] > memory.EZCP_units[memory.EZCP_contestant], 1, memory.EZCP_contestant) , 1), memory.EZCP_contestant),
EZCP_contestant = select(memory.EZCP_units[2] > 0, select(memory.EZCP_contestant >= 0, select(memory.EZCP_units[2] > memory.EZCP_units[memory.EZCP_contestant], 2, memory.EZCP_contestant) , 2), memory.EZCP_contestant),
EZCP_contestant = select(memory.EZCP_units[3] > 0, select(memory.EZCP_contestant >= 0, select(memory.EZCP_units[3] > memory.EZCP_units[memory.EZCP_contestant], 3, memory.EZCP_contestant) , 3), memory.EZCP_contestant),
EZCP_contestant = select(memory.EZCP_units[4] > 0, select(memory.EZCP_contestant >= 0, select(memory.EZCP_units[4] > memory.EZCP_units[memory.EZCP_contestant], 4, memory.EZCP_contestant) , 4), memory.EZCP_contestant),
EZCP_contestant = select(memory.EZCP_units[5] > 0, select(memory.EZCP_contestant >= 0, select(memory.EZCP_units[5] > memory.EZCP_units[memory.EZCP_contestant], 5, memory.EZCP_contestant) , 5), memory.EZCP_contestant),
EZCP_contestant = select(memory.EZCP_units[6] > 0, select(memory.EZCP_contestant >= 0, select(memory.EZCP_units[6] > memory.EZCP_units[memory.EZCP_contestant], 6, memory.EZCP_contestant) , 6), memory.EZCP_contestant),
EZCP_contestant = select(memory.EZCP_units[7] > 0, select(memory.EZCP_contestant >= 0, select(memory.EZCP_units[7] > memory.EZCP_units[memory.EZCP_contestant], 7, memory.EZCP_contestant) , 7), memory.EZCP_contestant),
EZCP_contestant = select(memory.EZCP_units[8] > 0, select(memory.EZCP_contestant >= 0, select(memory.EZCP_units[8] > memory.EZCP_units[memory.EZCP_contestant], 8, memory.EZCP_contestant) , 8), memory.EZCP_contestant),
EZCP_contestant = select(memory.EZCP_units[9] > 0, select(memory.EZCP_contestant >= 0, select(memory.EZCP_units[9] > memory.EZCP_units[memory.EZCP_contestant], 9, memory.EZCP_contestant) , 9), memory.EZCP_contestant),
EZCP_units[10] = select(memory.EZCP_contestant >= 0, memory.EZCP_markers[memory.EZCP_contestant].numberOfUnitsInAllyTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})+memory.EZCP_markers[memory.EZCP_contestant].numberOfUnitsInTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange}), 0)
"""

[hiddenAction_EZCP_checkCaptureWhileNeutral_EZCP_contestantA]
requireConditional: if (memory.EZCP_contestant != -2)
setUnitMemory: EZCP_units[10]=memory.EZCP_markers[memory.EZCP_contestant].numberOfUnitsInAllyTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})+memory.EZCP_markers[memory.EZCP_contestant].numberOfUnitsInTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange})
alsoTriggerAction: EZCP_checkCaptureWhileNeutral_EZCP_contestantB

[hiddenAction_EZCP_checkCaptureWhileNeutral_EZCP_contestantB]
setUnitMemory: """
EZCP_temp[0]=min(max(memory.EZCP_units[10]-memory.EZCP_markers[memory.EZCP_contestant].numberOfUnitsInEnemyTeam(withTag="${EZCP_capTag}", withinRange=${EZCP_capRange}),-${EZCP_capMax}),${EZCP_capMax}),
EZCP_temp[1]=select(memory.EZCP_temp[0] > 0, select(memory.EZCP_temp[0] == 1, memory.EZCP_capRateBase, memory.EZCP_capRateBase+(memory.EZCP_temp[0]-1)*memory.EZCP_capRatePerUnit),select(memory.EZCP_temp[0] < 0, select(memory.EZCP_temp[0] == -1, -memory.EZCP_capRateBase, (-memory.EZCP_capRateBase)+((memory.EZCP_temp[0]+1)*memory.EZCP_capRatePerUnit)), 0)),
EZCP_capRate=memory.EZCP_capRate+memory.EZCP_temp[1]
"""
alsoTriggerAction: EZCP_checkCaptureWhileNeutral_Reset, EZCP_checkCaptureWhileNeutral_Cap

[hiddenAction_EZCP_checkCaptureWhileNeutral_Reset]
requireConditional: if (memory.EZCP_capRate <= 0)
setUnitMemory: """
EZCP_contestant=-2,
EZCP_capRate=0
"""

[hiddenAction_EZCP_checkCaptureWhileNeutral_Cap]
requireConditional: if (memory.EZCP_capRate >= 1)
setUnitMemory: """
EZCP_capRate = 1
"""
switchToTeam: memory.EZCP_contestant

[hiddenAction_EZCP_neutralize]
requireConditional: if (memory.EZCP_capRate <= 0)
switchToTeam: -1
setUnitMemory: """
EZCP_capRate = 0,
EZCP_contestant = -2
"""