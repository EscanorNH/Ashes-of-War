#The Easy Capture setup
[core]
copyFrom: capPoint.copyFrom, capProgress.copyFrom
#You need to copyFrom the template. The capPoint.copyFrom is required to make the cap point work, the capProgress.copyFrom is only necessary if you want to use the built-in decal for progress

## This is the configuration to customize how the cap point works.
@global EZCP_capMax: 5
#Max difference in unit in calculation time for cap.
@global EZCP_capTimeMax: 10
#In amount of "ticks" to capture, when EZCP_capMax is met
@global EZCP_capTimeMin: 5
#In amount of "ticks" to capture, when only 1 is capping.
autoTriggerCooldownTime: 59
#In ticks, the lower it is, the more smooth capture is, the higher it is, the less laggy.
autoTriggerCheckRate:every8Frames
#Leave this as is, increases performance significantly.
# 59 is 1 second, 119 is 2 seconds (essentially 60 ticks per second -1)
@global EZCP_capTag: #capper
@global EZCP_capRange: 100
#Tag that EZCP_units need to have to cap

#The below is only if you include capProgress.copyFrom
@global EZCP_decalWidth: 22
@global EZCP_decalHeight: 2
#Width and height of the progress decal, should be self explanatory.
@global EZCP_decalBorder: 1.5
#Width of the border, set to -1 for no border.
@global EZCP_decalX: 0
@global EZCP_decalY: 13
#The absolute X and Y coordinates of the decal.
@global EZCP_decalFrameWidth: 16
@global EZCP_decalFrameHeight: 8
#Height and width of each frame in the progress decal
@global EZCP_decalSize: 14
#The width of the progress decal.
@global EZCP_decalFrameOffset: 31
#The frame that is the center "0" of the progress decal.

### BE aware, this specific setup does NOT support MOVING capture points.


#This is optioonal, but it makes it so you can see cap range by selecting.
[attack]
maxAttackRange: ${EZCP_capRange}
showRangeUIGuide: true

[core]
name: thingypoint
displayText: Маяк Аванпоста
class: CustomUnitMetadata
price: 20
maxHp: 10
mass: 10
tags: controlPoint

#footprint used for collisions with units (left, up, right, down)
footprint: 0,0,0,0

#used for placement, and placement of other buildings
constructionFootprint: -0,-0,0,0
#buildingToFootprintOffsetX:20
#buildingToFootprintOffsetY:20

techLevel: 1
buildSpeed: 20s
showInEditor: true
#isUnselectable: true
radius: 20
displayRadius: 0
isBio: false
isBuilding: true
energyStartingPercentage: 0
canNotBeDirectlyAttacked: true
canNotBeDamaged: true
disableDeathOnZeroHp: true
fogOfWarSightRange: 15

[hiddenAction_deds]
autoTrigger: if self.isOverWater()
addResources: hp=-1000
offsetSelfAbsolute: 0,0,-1

[hiddenAction_deds2]
autoTrigger:  if numberOfUnitsInAllTeams(withTag='spawn_ck', greaterThan=0, withinRange=500)
deleteSelf: true



[action_H.C.E.]
isVisible: if self.globalTeamTags(includes='#H.C.E.HQ')
convertTo: Outpost H.C.E. T1
buildSpeed: 25s
price: CM=150, Iron=75
text: Outpost
description: -Useful for strengthening positions\n-Commander near an outpost restores energy faster\n-Repairs buildings around him
text_ru: Аванпост
description_ru: -Полезен для укрепления позиций \n-Командир возле аванпоста востанавливают энергию быстрее\n-Ремонтирует здания вокруг себя
pos:1
ai_isHighPriority:true
isLockedAlt: if memory.EZCP_capRate != 1
isLockedAltMessage:[Stop the lighthouse capture!]
isLockedAltMessage_ru:[Остановите захват маяка!]


[graphics]
drawLayer: bottom
imageScale: 1
image: maiak.png
image_wreak:  NONE

#AUTO
image_shadow: NONE
shadowOffsetX:2
shadowOffsetY:2

#showEnergyBar: false

[attack]
canAttack: true
canAttackFlyingUnits: false
canAttackLandUnits:   false
canAttackUnderwaterUnits: false

[movement]
movementType: BUILDING
moveSpeed: 0
moveAccelerationSpeed: 0.01
moveDecelerationSpeed: 0.01

maxTurnSpeed: 0
turnAcceleration: 0.1


[decal_marker-bild]
image:maiak marker.png
imageScale: 1
teamColors:true
isVisible:true
onlyWhileAlive:true
alpha:0.5
hOffset:-1
layer:beforeBody
